%!PS-Adobe-2.0
%%Title: hsa_metabolic_network/avg_egdvs_rnd_spreads_figures/spreads_STICKY_hsa_metabolic_network_rnd.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sat May 31 18:03:10 2014
%%DocumentFonts: (atend)
%%BoundingBox: 201 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (hsa_metabolic_network/avg_egdvs_rnd_spreads_figures/spreads_STICKY_hsa_metabolic_network_rnd.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (razvan)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat May 31 18:03:10 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 201 50 moveto 554 50 lineto 554 770 lineto 201 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
756 448 M
63 0 V
5624 0 R
-63 0 V
stroke
672 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
756 933 M
63 0 V
5624 0 R
-63 0 V
stroke
672 933 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
1.000 UL
LTb
756 1418 M
63 0 V
5624 0 R
-63 0 V
stroke
672 1418 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MRshow
1.000 UL
LTb
756 1904 M
63 0 V
5624 0 R
-63 0 V
stroke
672 1904 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.3)]
] -46.7 MRshow
1.000 UL
LTb
756 2389 M
63 0 V
5624 0 R
-63 0 V
stroke
672 2389 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MRshow
1.000 UL
LTb
756 2874 M
63 0 V
5624 0 R
-63 0 V
stroke
672 2874 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MRshow
1.000 UL
LTb
756 3359 M
63 0 V
5624 0 R
-63 0 V
stroke
672 3359 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MRshow
1.000 UL
LTb
756 448 M
0 63 V
stroke
756 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1)]
] -46.7 MCshow
1.000 UL
LTb
959 448 M
0 63 V
stroke
959 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (2)]
] -46.7 MCshow
1.000 UL
LTb
1162 448 M
0 63 V
stroke
1162 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (3)]
] -46.7 MCshow
1.000 UL
LTb
1365 448 M
0 63 V
stroke
1365 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (4)]
] -46.7 MCshow
1.000 UL
LTb
1568 448 M
0 63 V
stroke
1568 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (5)]
] -46.7 MCshow
1.000 UL
LTb
1772 448 M
0 63 V
stroke
1772 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (6)]
] -46.7 MCshow
1.000 UL
LTb
1975 448 M
0 63 V
stroke
1975 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (7)]
] -46.7 MCshow
1.000 UL
LTb
2178 448 M
0 63 V
stroke
2178 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (8)]
] -46.7 MCshow
1.000 UL
LTb
2381 448 M
0 63 V
stroke
2381 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (9)]
] -46.7 MCshow
1.000 UL
LTb
2584 448 M
0 63 V
stroke
2584 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (10)]
] -46.7 MCshow
1.000 UL
LTb
2787 448 M
0 63 V
stroke
2787 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (11)]
] -46.7 MCshow
1.000 UL
LTb
2990 448 M
0 63 V
stroke
2990 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (12)]
] -46.7 MCshow
1.000 UL
LTb
3193 448 M
0 63 V
stroke
3193 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (13)]
] -46.7 MCshow
1.000 UL
LTb
3396 448 M
0 63 V
stroke
3396 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (14)]
] -46.7 MCshow
1.000 UL
LTb
3600 448 M
0 63 V
stroke
3600 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (15)]
] -46.7 MCshow
1.000 UL
LTb
3803 448 M
0 63 V
stroke
3803 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (16)]
] -46.7 MCshow
1.000 UL
LTb
4006 448 M
0 63 V
stroke
4006 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (17)]
] -46.7 MCshow
1.000 UL
LTb
4209 448 M
0 63 V
stroke
4209 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (18)]
] -46.7 MCshow
1.000 UL
LTb
4412 448 M
0 63 V
stroke
4412 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (19)]
] -46.7 MCshow
1.000 UL
LTb
4615 448 M
0 63 V
stroke
4615 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (20)]
] -46.7 MCshow
1.000 UL
LTb
4818 448 M
0 63 V
stroke
4818 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (21)]
] -46.7 MCshow
1.000 UL
LTb
5021 448 M
0 63 V
stroke
5021 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (22)]
] -46.7 MCshow
1.000 UL
LTb
5224 448 M
0 63 V
stroke
5224 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (23)]
] -46.7 MCshow
1.000 UL
LTb
5427 448 M
0 63 V
stroke
5427 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (24)]
] -46.7 MCshow
1.000 UL
LTb
5631 448 M
0 63 V
stroke
5631 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (25)]
] -46.7 MCshow
1.000 UL
LTb
5834 448 M
0 63 V
stroke
5834 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (26)]
] -46.7 MCshow
1.000 UL
LTb
6037 448 M
0 63 V
stroke
6037 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (27)]
] -46.7 MCshow
1.000 UL
LTb
6240 448 M
0 63 V
stroke
6240 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (28)]
] -46.7 MCshow
1.000 UL
LTb
6443 448 M
0 63 V
stroke
6443 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (29)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
756 3359 N
756 448 L
5687 0 V
0 2911 V
-5687 0 V
Z stroke
LCb setrgbcolor
182 1903 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times-Roman) 200.0 0.0 true true 0 (Frequency)]
] -66.7 MCshow
grestore
LTb
LCb setrgbcolor
3599 98 M
[ [(Times-Roman) 200.0 0.0 true true 0 (Graphlets)]
] -66.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
3.000 UL
LT0
0.00 0.00 0.00 C 756 459 M
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
959 449 M
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
172 55 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
172 47 R
0 6 V
-31 -6 R
62 0 V
-62 6 R
62 0 V
1568 449 M
-31 0 R
62 0 V
-62 0 R
62 0 V
173 46 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
172 -47 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
172 -8 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
172 170 R
0 47 V
-31 -47 R
62 0 V
-62 47 R
62 0 V
172 1029 R
0 111 V
-31 -111 R
62 0 V
-62 111 R
62 0 V
172 -233 R
0 230 V
-31 -230 R
62 0 V
-62 230 R
62 0 V
2990 942 M
0 50 V
-31 -50 R
62 0 V
-62 50 R
62 0 V
3193 520 M
0 15 V
-31 -15 R
62 0 V
-62 15 R
62 0 V
172 532 R
0 35 V
-31 -35 R
62 0 V
-62 35 R
62 0 V
3600 449 M
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
172 34 R
0 9 V
-31 -9 R
62 0 V
-62 9 R
62 0 V
172 226 R
0 34 V
-31 -34 R
62 0 V
-62 34 R
62 0 V
4209 458 M
0 2 V
-31 -2 R
62 0 V
stroke 4240 458 M
-62 2 R
62 0 V
172 66 R
0 14 V
-31 -14 R
62 0 V
-62 14 R
62 0 V
172 -92 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
172 7 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
172 8 R
0 5 V
-31 -5 R
62 0 V
-62 5 R
62 0 V
172 57 R
0 20 V
-31 -20 R
62 0 V
-62 20 R
62 0 V
172 -74 R
0 5 V
-31 -5 R
62 0 V
-62 5 R
62 0 V
173 -29 R
-31 0 R
62 0 V
-62 0 R
62 0 V
172 25 R
0 7 V
-31 -7 R
62 0 V
-62 7 R
62 0 V
172 -33 R
-31 0 R
62 0 V
-62 0 R
62 0 V
172 6 R
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
172 -7 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
756 460 CircleF
959 450 CircleF
1162 509 CircleF
1365 563 CircleF
1568 449 CircleF
1772 499 CircleF
1975 457 CircleF
2178 451 CircleF
2381 645 CircleF
2584 1752 CircleF
2787 1690 CircleF
2990 967 CircleF
3193 528 CircleF
3396 1085 CircleF
3600 449 CircleF
3803 489 CircleF
4006 736 CircleF
4209 459 CircleF
4412 533 CircleF
4615 449 CircleF
4818 457 CircleF
5021 469 CircleF
5224 538 CircleF
5427 477 CircleF
5631 450 CircleF
5834 479 CircleF
6037 449 CircleF
6240 456 CircleF
6443 451 CircleF
% End plot #1
% Begin plot #2
3.000 UL
LT0
0.60 0.20 0.00 C LCb setrgbcolor
5792 3191 M
[ [(Times-Roman) 200.0 0.0 true true 0 (STICKY)]
] -66.7 MRshow
LT0
0.60 0.20 0.00 C 5876 3191 M
399 0 V
756 460 M
959 450 L
203 59 V
203 54 V
1568 449 L
204 50 V
203 -42 V
203 -6 V
203 194 V
203 1107 V
203 -62 V
2990 967 L
3193 528 L
203 557 V
3600 449 L
203 40 V
203 247 V
4209 459 L
203 74 V
203 -84 V
203 8 V
203 12 V
203 69 V
203 -61 V
204 -27 V
203 29 V
203 -30 V
203 7 V
203 -5 V
% End plot #2
% Begin plot #3
stroke
LT0
0.00 0.00 0.00 C LCb setrgbcolor
5792 2981 M
[ [(Times-Roman) 200.0 0.0 true true 0 (REAL NETWORK)]
] -66.7 MRshow
LT0
0.00 0.00 0.00 C 5876 2981 M
399 0 V
756 457 M
203 -9 V
203 29 V
203 124 V
1568 449 L
204 16 V
203 -15 V
203 -2 V
203 128 V
203 721 V
203 2025 V
2990 605 L
3193 478 L
203 344 V
3600 449 L
203 53 V
203 53 V
4209 452 L
203 14 V
203 -10 V
203 -4 V
203 10 V
203 -7 V
203 -1 V
204 -5 V
203 2 V
203 -3 V
203 0 V
203 0 V
% End plot #3
stroke
1.000 UL
LTb
756 3359 N
756 448 L
5687 0 V
0 2911 V
-5687 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman Helvetica
%%Pages: 1
