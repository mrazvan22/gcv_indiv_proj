%!PS-Adobe-2.0
%%Title: trade_2010_thresholded/avg_egdvs_rnd_spreads_figures/spreads_er_trade_2010_thresholded_rnd.ps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Tue May 13 17:59:10 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (trade_2010_thresholded/avg_egdvs_rnd_spreads_figures/spreads_er_trade_2010_thresholded_rnd.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (rvm10)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue May 13 17:59:10 2014)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
770 448 M
63 0 V
6114 0 R
-63 0 V
686 448 M
( 0) Rshow
1.000 UL
LTb
770 1333 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 0.05) Rshow
1.000 UL
LTb
770 2217 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 0.1) Rshow
1.000 UL
LTb
770 3102 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 0.15) Rshow
1.000 UL
LTb
770 3986 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 0.2) Rshow
1.000 UL
LTb
770 4871 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 0.25) Rshow
1.000 UL
LTb
770 448 M
0 63 V
0 -203 R
(1) Cshow
1.000 UL
LTb
991 448 M
0 63 V
0 -203 R
(2) Cshow
1.000 UL
LTb
1211 448 M
0 63 V
0 -203 R
(3) Cshow
1.000 UL
LTb
1432 448 M
0 63 V
0 -203 R
(4) Cshow
1.000 UL
LTb
1652 448 M
0 63 V
0 -203 R
(5) Cshow
1.000 UL
LTb
1873 448 M
0 63 V
0 -203 R
(6) Cshow
1.000 UL
LTb
2094 448 M
0 63 V
0 -203 R
(7) Cshow
1.000 UL
LTb
2314 448 M
0 63 V
0 -203 R
(8) Cshow
1.000 UL
LTb
2535 448 M
0 63 V
0 -203 R
(9) Cshow
1.000 UL
LTb
2755 448 M
0 63 V
0 -203 R
(10) Cshow
1.000 UL
LTb
2976 448 M
0 63 V
0 -203 R
(11) Cshow
1.000 UL
LTb
3197 448 M
0 63 V
0 -203 R
(12) Cshow
1.000 UL
LTb
3417 448 M
0 63 V
0 -203 R
(13) Cshow
1.000 UL
LTb
3638 448 M
0 63 V
0 -203 R
(14) Cshow
1.000 UL
LTb
3859 448 M
0 63 V
0 -203 R
(15) Cshow
1.000 UL
LTb
4079 448 M
0 63 V
0 -203 R
(16) Cshow
1.000 UL
LTb
4300 448 M
0 63 V
0 -203 R
(17) Cshow
1.000 UL
LTb
4520 448 M
0 63 V
0 -203 R
(18) Cshow
1.000 UL
LTb
4741 448 M
0 63 V
0 -203 R
(19) Cshow
1.000 UL
LTb
4962 448 M
0 63 V
0 -203 R
(20) Cshow
1.000 UL
LTb
5182 448 M
0 63 V
0 -203 R
(21) Cshow
1.000 UL
LTb
5403 448 M
0 63 V
0 -203 R
(22) Cshow
1.000 UL
LTb
5623 448 M
0 63 V
0 -203 R
(23) Cshow
1.000 UL
LTb
5844 448 M
0 63 V
0 -203 R
(24) Cshow
1.000 UL
LTb
6065 448 M
0 63 V
0 -203 R
(25) Cshow
1.000 UL
LTb
6285 448 M
0 63 V
0 -203 R
(26) Cshow
1.000 UL
LTb
6506 448 M
0 63 V
0 -203 R
(27) Cshow
1.000 UL
LTb
6726 448 M
0 63 V
0 -203 R
(28) Cshow
1.000 UL
LTb
6947 448 M
0 63 V
0 -203 R
(29) Cshow
1.000 UL
LTb
1.000 UL
LTb
770 4871 N
770 448 L
6177 0 V
0 4423 V
-6177 0 V
Z stroke
LCb setrgbcolor
/Times-Roman findfont 200 scalefont setfont
112 2659 M
currentpoint gsave translate -270 rotate 0 0 M
(Frequency) Cshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
/Times-Roman findfont 200 scalefont setfont
3858 98 M
(Graphlets) Cshow
/Helvetica findfont 140 scalefont setfont
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
3.000 UL
LT0
0.00 0.00 0.00 C 770 1164 M
0 3085 V
739 1164 M
62 0 V
739 4249 M
62 0 V
991 473 M
0 138 V
960 473 M
62 0 V
960 611 M
62 0 V
189 662 R
0 3351 V
1180 1273 M
62 0 V
-62 3351 R
62 0 V
1432 714 M
0 1090 V
1401 714 M
62 0 V
-62 1090 R
62 0 V
1652 471 M
0 109 V
1621 471 M
62 0 V
-62 109 R
62 0 V
190 -48 R
0 447 V
1842 532 M
62 0 V
-62 447 R
62 0 V
2094 449 M
0 31 V
-31 -31 R
62 0 V
-62 31 R
62 0 V
189 -32 R
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
190 815 R
0 3289 V
2504 1266 M
62 0 V
-62 3289 R
62 0 V
2755 1221 M
0 3275 V
2724 1221 M
62 0 V
-62 3275 R
62 0 V
2976 483 M
0 317 V
2945 483 M
62 0 V
-62 317 R
62 0 V
3197 519 M
0 468 V
3166 519 M
62 0 V
-62 468 R
62 0 V
3417 528 M
0 442 V
3386 528 M
62 0 V
-62 442 R
62 0 V
3638 484 M
0 229 V
3607 484 M
62 0 V
-62 229 R
62 0 V
3859 465 M
0 85 V
-31 -85 R
62 0 V
-62 85 R
62 0 V
189 -23 R
0 459 V
4048 527 M
62 0 V
-62 459 R
62 0 V
4300 448 M
0 66 V
-31 -66 R
62 0 V
-62 66 R
62 0 V
189 -66 R
0 19 V
-31 -19 R
62 0 V
stroke 4551 448 M
-62 19 R
62 0 V
190 -16 R
0 62 V
-31 -62 R
62 0 V
-62 62 R
62 0 V
190 -65 R
0 14 V
-31 -14 R
62 0 V
-62 14 R
62 0 V
189 -8 R
0 66 V
-31 -66 R
62 0 V
-62 66 R
62 0 V
190 -72 R
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
189 -1 R
0 11 V
-31 -11 R
62 0 V
-62 11 R
62 0 V
190 -11 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
190 -8 R
0 5 V
-31 -5 R
62 0 V
-62 5 R
62 0 V
189 -5 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
190 -2 R
-31 0 R
62 0 V
-62 0 R
62 0 V
189 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
190 0 R
-31 0 R
62 0 V
-62 0 R
62 0 V
770 2706 CircleF
991 542 CircleF
1211 2948 CircleF
1432 1259 CircleF
1652 525 CircleF
1873 756 CircleF
2094 465 CircleF
2314 448 CircleF
2535 2910 CircleF
2755 2859 CircleF
2976 641 CircleF
3197 753 CircleF
3417 749 CircleF
3638 599 CircleF
3859 508 CircleF
4079 756 CircleF
4300 480 CircleF
4520 457 CircleF
4741 482 CircleF
4962 454 CircleF
5182 487 CircleF
5403 448 CircleF
5623 450 CircleF
5844 451 CircleF
6065 450 CircleF
6285 448 CircleF
6506 448 CircleF
6726 448 CircleF
6947 448 CircleF
% End plot #1
% Begin plot #2
3.000 UL
LT0
0.00 0.38 0.68 C LCb setrgbcolor
/Times-Roman findfont 200 scalefont setfont
6296 4710 M
(avg trade_2010_thresholded - er) Rshow
/Helvetica findfont 140 scalefont setfont
LT0
0.00 0.38 0.68 C 6380 4710 M
399 0 V
770 2706 M
991 542 L
220 2406 V
1432 1259 L
1652 525 L
221 231 V
2094 465 L
220 -17 V
221 2462 V
220 -51 V
2976 641 L
221 112 V
220 -4 V
3638 599 L
221 -91 V
220 248 V
4300 480 L
220 -23 V
221 25 V
221 -28 V
220 33 V
221 -39 V
220 2 V
221 1 V
221 -1 V
220 -2 V
221 0 V
220 0 V
221 0 V
% End plot #2
% Begin plot #3
stroke
LT0
0.00 0.00 0.00 C LCb setrgbcolor
/Times-Roman findfont 200 scalefont setfont
6296 4514 M
(avg trade_2010_thresholded - real network) Rshow
/Helvetica findfont 140 scalefont setfont
LT0
0.00 0.00 0.00 C 6380 4514 M
399 0 V
770 538 M
991 513 L
220 66 V
221 294 V
1652 455 L
221 535 V
2094 789 L
2314 654 L
221 -51 V
220 714 V
221 976 V
3197 1201 L
3417 744 L
221 2470 V
3859 450 L
220 75 V
221 2499 V
4520 750 L
221 99 V
4962 453 L
220 34 V
221 905 V
220 213 V
221 -491 V
6065 469 L
220 1569 V
6506 502 L
220 850 V
6947 911 L
% End plot #3
stroke
1.000 UL
LTb
770 4871 N
770 448 L
6177 0 V
0 4423 V
-6177 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman Helvetica
%%Pages: 1
